# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ github-actions ]
  pull_request:
    branches: [ github-actions ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8 
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Add secret
      run: echo discord.bot.token=${{ secrets.discord_token }} >> src/main/resources/secret.properties
#     - name: Cache Gradle packages
#       uses: actions/cache@v2
#       with:
#         path: |
#           ~/.gradle/caches
#           ~/.gradle/wrapper
#         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#         restore-keys: |
#           ${{ runner.os }}-gradle-
#     - name: Build with Gradle
#       run: ./gradlew build
#     - name: Cleanup Gradle Cache
#       run: |
#         rm -f ~/.gradle/caches/modules-2/modules-2.lock
#         rm -f ~/.gradle/caches/modules-2/gc.properties
#     - uses: actions/upload-artifact@v2.2.3
#       with:
#         name: Package
#         path: build/libs
    - name: ssh deploy
      uses: easingthemes/ssh-deploy@v2
      with:
        # Private Key
        SSH_PRIVATE_KEY: ${{ secrets.ssh_key }}
        ARGS: "-rltgoDzvO --delete"
        # Remote host
        REMOTE_HOST: ${{ secrets.ssh_host }}
        # Remote user
        REMOTE_USER: ${{ secrets.ssh_user }}
        # Remote port
        REMOTE_PORT: ${{ secrets.ssh_port }}
        # Source directory
        SOURCE: src #build/libs/
        # Target directory
        TARGET: ${{ secrets.deploy_target }}
    - name: start service 
      run: ls ~/.ssh
    - name: start service 
      run: ssh ${{ secrets.ssh_user }}@${{ secrets.ssh_host }} pwd
    
